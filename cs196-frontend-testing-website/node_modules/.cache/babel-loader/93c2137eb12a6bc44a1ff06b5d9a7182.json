{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\cs196-frontend-testing-website\\\\src\\\\Questionnaire.js\";\nimport React, { Component } from \"react\";\nimport { QuestionData } from \"./QuestionData\";\nimport App from \"./App\";\nimport Home from \"./Home\";\nimport Contact from \"./Contact\";\nimport Header from \"./Header\";\nimport About from \"./About\";\nimport ProgressBar from \"./ProgressBar\";\nimport './Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Questionnaire extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startQuiz = () => {\n      const {\n        currentIndex\n      } = this.state;\n      this.setState(() => {\n        return {\n          question: QuestionData[currentIndex].question,\n          answerChoices: QuestionData[currentIndex].answerChoices,\n          answer: QuestionData[currentIndex].answer\n        };\n      });\n    };\n\n    this.nextQuestionHandler = () => {\n      const {\n        userAnswer,\n        answer,\n        score\n      } = this.state;\n\n      if (userAnswer === answer) {\n        this.setState({\n          score: score + 5\n        });\n      }\n\n      this.setState({\n        currentIndex: this.state.currentIndex + 1 //userAnswer: null\n\n      });\n    };\n\n    this.updateProgressBarHandler = () => {\n      const {\n        score,\n        width,\n        height,\n        answer,\n        userAnswer\n      } = this.state;\n\n      if (userAnswer === answer && userAnswer != null && answer != null) {\n        this.setState;\n      }\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        userAnswer: answer,\n        disabled: false\n      });\n    };\n\n    this.finishHandler = () => {\n      if (this.state.currentIndex === QuestionData.length - 1) {\n        this.setState({\n          quizEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      userAnswer: null,\n      currentIndex: 0,\n      answerChoices: [],\n      quizEnd: false,\n      score: 0,\n      scorePG: 0,\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    this.startQuiz();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      currentIndex\n    } = this.state;\n\n    if (this.state.currentIndex !== prevState.currentIndex) {\n      this.setState(() => {\n        return {\n          question: QuestionData[currentIndex].question,\n          answerChoices: QuestionData[currentIndex].answerChoices,\n          answer: QuestionData[currentIndex].answer\n        };\n      });\n    }\n  }\n\n  render() {\n    const {\n      question,\n      answerChoices,\n      currentIndex,\n      userAnswer,\n      quizEnd,\n      showScore,\n      score,\n      questions,\n      currentQuestion,\n      nextQuestionHandler\n    } = this.state;\n\n    if (quizEnd) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionnaire-end\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"You are Hot!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionnaire-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionCount\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", `Question ${currentIndex + 1} of ${QuestionData.length}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statement\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", question, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"question-indy\",\n          children: answerChoices.map(option => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `choices ${userAnswer === option ? \"selected\" : null}`,\n            onClick: () => this.checkAnswer(option),\n            children: option\n          }, answerChoices.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next\",\n        children: currentIndex < QuestionData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-next\",\n          disabled: this.state.disabled,\n          onClick: this.nextQuestionHandler,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        children: currentIndex === QuestionData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.finishHandler,\n          disabled: this.state.disabled,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/chris/cs196-frontend-testing-website/src/Questionnaire.js"],"names":["React","Component","QuestionData","App","Home","Contact","Header","About","ProgressBar","Questionnaire","constructor","props","startQuiz","currentIndex","state","setState","question","answerChoices","answer","nextQuestionHandler","userAnswer","score","updateProgressBarHandler","width","height","checkAnswer","disabled","finishHandler","length","quizEnd","scorePG","componentDidMount","componentDidUpdate","prevProps","prevState","render","showScore","questions","currentQuestion","map","option","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { QuestionData } from \"./QuestionData\";\r\nimport App from \"./App\";\r\nimport Home from \"./Home\";\r\nimport Contact from \"./Contact\";\r\nimport Header from \"./Header\";\r\nimport About from \"./About\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport './Style.css';\r\n\r\nexport default class Questionnaire extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state= {\r\n            userAnswer: null,\r\n            currentIndex: 0,\r\n            answerChoices: [],\r\n            quizEnd: false,\r\n            score: 0,\r\n            scorePG: 0,\r\n            disabled: true\r\n        }\r\n    }\r\n\r\n    startQuiz = () => {\r\n        const {currentIndex} = this.state;\r\n        this.setState(() => {\r\n            return {\r\n                question: QuestionData[currentIndex].question,\r\n                answerChoices: QuestionData[currentIndex].answerChoices,\r\n                answer: QuestionData[currentIndex].answer\r\n            }\r\n        })\r\n    }\r\n    nextQuestionHandler = () => {\r\n        const {userAnswer, answer, score} = this.state\r\n\r\n        if (userAnswer === answer) {\r\n            this.setState ({\r\n                score: score + 5\r\n            })\r\n        }\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n            //userAnswer: null\r\n        })\r\n    }\r\n\r\n    updateProgressBarHandler = () => {\r\n        const {score, width, height, answer, userAnswer} = this.state \r\n\r\n        if (userAnswer === answer && userAnswer != null && answer != null) {\r\n            this.setState \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startQuiz();\r\n    }\r\n    \r\n    checkAnswer = answer => {\r\n        this.setState({\r\n            userAnswer: answer,\r\n            disabled: false\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const{currentIndex} = this.state;\r\n        if (this.state.currentIndex !== prevState.currentIndex) {\r\n            this.setState(() => {\r\n                return {\r\n                    question: QuestionData[currentIndex].question,\r\n                    answerChoices: QuestionData[currentIndex].answerChoices,\r\n                    answer: QuestionData[currentIndex].answer\r\n                }\r\n            })\r\n        }\r\n    }\r\n    finishHandler = () => {\r\n        if (this.state.currentIndex === QuestionData.length - 1) {\r\n            this.setState({\r\n                quizEnd: true\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {question, answerChoices, currentIndex, userAnswer, quizEnd, showScore, score, questions, currentQuestion, nextQuestionHandler} = this.state      \r\n\r\n        if (quizEnd) {\r\n            return (\r\n                <div className = 'questionnaire-end'>\r\n                    <h1>\r\n                        You are Hot! \r\n                    </h1>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div className = 'questionnaire-main'>\r\n                 \r\n                <div className = 'questionCount'> \r\n                    <span> {`Question ${currentIndex + 1} of ${QuestionData.length}`} </span>\r\n                </div>\r\n\r\n                <div className = 'questionSection'>\r\n                    <div className = 'statement'>\r\n                        <h1> {question} </h1>\r\n                    </div>\r\n\r\n                    <div class = 'question-indy'>\r\n                        {\r\n                        answerChoices.map(option => (                  \r\n                            <p key = {answerChoices.id} className = {`choices ${userAnswer === option ? \"selected\" : null}`}\r\n                            onClick= {() => this.checkAnswer(option)}>\r\n                                {option}                                \r\n                            </p>\r\n                            )    \r\n                        )}\r\n                    </div>    \r\n                </div>\r\n                \r\n                <div className = 'next'>\r\n                    {currentIndex < QuestionData.length - 1 && \r\n                    <button className = 'button-next' disabled = {this.state.disabled} onClick = {this.nextQuestionHandler}>\r\n                        Next Question\r\n                    </button>}\r\n                </div>    \r\n\r\n\r\n                <div className = 'submit'>        \r\n                    {currentIndex === QuestionData.length - 1 &&\r\n                    <button onClick = {this.finishHandler} disabled = {this.state.disabled}>\r\n                        Submit\r\n                    </button>}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}