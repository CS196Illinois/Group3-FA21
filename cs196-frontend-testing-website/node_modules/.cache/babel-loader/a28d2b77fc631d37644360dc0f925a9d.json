{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\cs196-frontend-testing-website\\\\src\\\\Questionnaire.js\";\nimport React, { Component } from \"react\";\nimport { QuestionData } from \"./QuestionData\";\nimport App from \"./App\";\nimport Home from \"./Home\";\nimport Contact from \"./Contact\";\nimport Header from \"./Header\";\nimport About from \"./About\";\nimport ProgressBar from \"./ProgressBar\";\nimport './Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Questionnaire extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startQuiz = () => {\n      const {\n        currentIndex\n      } = this.state;\n      this.setState(() => {\n        return {\n          question: QuestionData[currentIndex].question,\n          answerChoices: QuestionData[currentIndex].answerChoices,\n          answer: QuestionData[currentIndex].answer\n        };\n      });\n    };\n\n    this.nextQuestionHandler = () => {\n      const {\n        userAnswer,\n        answer,\n        score\n      } = this.state;\n\n      if (userAnswer === answer) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        currentIndex: this.state.currentIndex + 1 //userAnswer: null\n\n      });\n    };\n\n    this.updateProgressBarHandler = () => {\n      const {\n        score,\n        answer,\n        userAnswer\n      } = this.state;\n\n      if (userAnswer === answer && userAnswer != null && answer != null) {\n        this.setState({\n          score: score * 5\n        });\n      }\n\n      this.setState({\n        currentIndex: this.state.currentIndex + 1\n      });\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        userAnswer: answer,\n        disabled: false\n      });\n    };\n\n    this.finishHandler = () => {\n      if (this.state.currentIndex === QuestionData.length - 1) {\n        this.setState({\n          quizEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      userAnswer: null,\n      currentIndex: 0,\n      answerChoices: [],\n      quizEnd: false,\n      score: 0,\n      scorePG: 0,\n      disabled: true,\n      items: [],\n      dataIsLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.startQuiz();\n    fetch(\"https://my-json-server.typicode.com/cleeclee123/JSONDataTemp/questionData\").then(res => res.json()).then(json => {\n      this.setState({\n        items: json,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      currentIndex\n    } = this.state;\n\n    if (this.state.currentIndex !== prevState.currentIndex) {\n      this.setState(() => {\n        return {\n          question: QuestionData[currentIndex].question,\n          answerChoices: QuestionData[currentIndex].answerChoices,\n          answer: QuestionData[currentIndex].answer\n        };\n      });\n    }\n  }\n\n  render() {\n    const {\n      question,\n      answerChoices,\n      currentIndex,\n      userAnswer,\n      quizEnd,\n      Parentdiv,\n      Childdiv,\n      progresstext,\n      progress,\n      showScore,\n      score,\n      questions,\n      currentQuestion,\n      nextQuestionHandler,\n      DataisLoaded,\n      items\n    } = this.state;\n\n    if (!DataisLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Please wait.... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (quizEnd) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionnaire-end\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"questionnaire-end1\",\n          children: \"You are Hot!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this);\n    }\n\n    const storeUserAnswer = (cacheName, url, response) => {\n      const data = new Response(JSON.stringify(response));\n      /* if ('caches' in window) {\r\n          caches.open(cacheName).then((cache) => {\r\n              cache.put(url, data);\r\n              alert('cached-testing message')\r\n          });\r\n      } */\n    };\n\n    if (currentIndex === QuestionData.length - 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-Page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progressBar-submit\",\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n            bgcolor: \"red\",\n            progress: `${currentIndex * 5}`,\n            height: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionCount-submit\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", `Question ${currentIndex + 1} of ${QuestionData.length}`, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionSection-submit\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statement-submit\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" \", question, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"question-indy-submit\",\n            children: answerChoices.map(option => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `choices ${userAnswer === option ? \"selected\" : null}`,\n              onClick: () => this.checkAnswer(option),\n              children: option\n            }, answerChoices.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit\",\n          children: currentIndex === QuestionData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-submit\",\n            onClick: this.finishHandler,\n            disabled: this.state.disabled,\n            children: \"Submit Questionnaire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionnaire-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressBar\",\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          bgcolor: \"red\",\n          progress: `${currentIndex * 5}`,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionCount\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", `Question ${currentIndex + 1} of ${QuestionData.length}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statement\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", question, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"question-indy\",\n          children: answerChoices.map(option => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `choices ${userAnswer === option ? \"selected\" : null}`,\n            onClick: () => this.checkAnswer(option),\n            children: option\n          }, answerChoices.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next\",\n        children: currentIndex < QuestionData.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-next\",\n          disabled: this.state.disabled,\n          onClick: this.nextQuestionHandler,\n          onClick: () => storeUserAnswerLocal('userCache', 'https://localhost:300', {\n            userAnswer\n          }),\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/chris/cs196-frontend-testing-website/src/Questionnaire.js"],"names":["React","Component","QuestionData","App","Home","Contact","Header","About","ProgressBar","Questionnaire","constructor","props","startQuiz","currentIndex","state","setState","question","answerChoices","answer","nextQuestionHandler","userAnswer","score","updateProgressBarHandler","checkAnswer","disabled","finishHandler","length","quizEnd","scorePG","items","dataIsLoaded","componentDidMount","fetch","then","res","json","DataisLoaded","componentDidUpdate","prevProps","prevState","render","Parentdiv","Childdiv","progresstext","progress","showScore","questions","currentQuestion","storeUserAnswer","cacheName","url","response","data","Response","JSON","stringify","map","option","id","storeUserAnswerLocal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { QuestionData } from \"./QuestionData\";\r\nimport App from \"./App\";\r\nimport Home from \"./Home\";\r\nimport Contact from \"./Contact\";\r\nimport Header from \"./Header\";\r\nimport About from \"./About\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport './Style.css';\r\n\r\nexport default class Questionnaire extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state= {\r\n            userAnswer: null,\r\n            currentIndex: 0,\r\n            answerChoices: [],\r\n            quizEnd: false,\r\n            score: 0,\r\n            scorePG: 0,\r\n            disabled: true,\r\n            items:[],\r\n            dataIsLoaded: false\r\n        }\r\n    }\r\n\r\n\r\n    startQuiz = () => {\r\n        const {currentIndex} = this.state;\r\n        this.setState(() => {\r\n            return {\r\n                question: QuestionData[currentIndex].question,\r\n                answerChoices: QuestionData[currentIndex].answerChoices,\r\n                answer: QuestionData[currentIndex].answer\r\n            }\r\n        })\r\n    }\r\n    nextQuestionHandler = () => {\r\n        const {userAnswer, answer, score} = this.state\r\n\r\n        if (userAnswer === answer) {\r\n            this.setState ({\r\n                score: score + 1\r\n            })\r\n        }\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n            //userAnswer: null\r\n        })\r\n    }\r\n    updateProgressBarHandler = () => {\r\n        const {score, answer, userAnswer} = this.state \r\n        \r\n        if (userAnswer === answer && userAnswer != null && answer != null) {\r\n            this.setState ({\r\n                score: score * 5\r\n            })\r\n        }\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.startQuiz();\r\n\r\n        fetch(\r\n            \"https://my-json-server.typicode.com/cleeclee123/JSONDataTemp/questionData\")\r\n\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    \r\n                    this.setState ({\r\n                        items: json,\r\n                        DataisLoaded: true\r\n                });\r\n        })\r\n    }\r\n    \r\n    checkAnswer = answer => {\r\n        this.setState({\r\n            userAnswer: answer,\r\n            disabled: false\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const{currentIndex} = this.state;\r\n        if (this.state.currentIndex !== prevState.currentIndex) {\r\n            this.setState(() => {\r\n                return {\r\n                    question: QuestionData[currentIndex].question,\r\n                    answerChoices: QuestionData[currentIndex].answerChoices,\r\n                    answer: QuestionData[currentIndex].answer\r\n                }\r\n            })\r\n        }\r\n    }\r\n    finishHandler = () => {\r\n        if (this.state.currentIndex === QuestionData.length - 1) {\r\n            this.setState({\r\n                quizEnd: true\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const {question, answerChoices, currentIndex, userAnswer, quizEnd, \r\n            Parentdiv, Childdiv, progresstext, progress, showScore, score, \r\n            questions, currentQuestion, nextQuestionHandler,  DataisLoaded, \r\n            items} = this.state      \r\n        \r\n        if (! DataisLoaded) {\r\n            return (\r\n                <div>\r\n                    <h1> Please wait.... </h1> \r\n                </div> \r\n            )\r\n        }\r\n\r\n        if (quizEnd) {\r\n            return (\r\n                <div className = 'questionnaire-end'>\r\n                    <h1 className = 'questionnaire-end1'>\r\n                        You are Hot! \r\n                    </h1>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        const storeUserAnswer = (cacheName, url, response) => {\r\n            const data = new Response(JSON.stringify(response));\r\n\r\n            /* if ('caches' in window) {\r\n                caches.open(cacheName).then((cache) => {\r\n                    cache.put(url, data);\r\n                    alert('cached-testing message')\r\n                });\r\n            } */\r\n        };\r\n        \r\n\r\n        if (currentIndex === QuestionData.length - 1) {\r\n            return (\r\n                <div className = 'submit-Page'>\r\n\r\n                    <div className = 'progressBar-submit'>\r\n                        <ProgressBar bgcolor=\"red\" progress = {`${currentIndex * 5}`}  height = {20}/>\r\n                    </div>\r\n                    \r\n                    <div className = 'questionCount-submit'> \r\n                        <span> {`Question ${currentIndex + 1} of ${QuestionData.length}`} </span>\r\n                    </div>\r\n                        \r\n                    <div className = 'questionSection-submit'>\r\n                        <div className = 'statement-submit'>\r\n                            <h1> {question} </h1>\r\n                        </div>\r\n\r\n                        <div class = 'question-indy-submit'>\r\n                            {\r\n                            answerChoices.map(option => (                  \r\n                                <p key = {answerChoices.id} className = {`choices ${userAnswer === option ? \"selected\" : null}`}\r\n                                onClick= {() => this.checkAnswer(option)}>\r\n                                    {option}                                \r\n                                </p>\r\n                                )    \r\n                            )}\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className = 'submit'>        \r\n                        {currentIndex === QuestionData.length - 1 &&\r\n                            <button className = 'button-submit' onClick = {this.finishHandler} disabled = {this.state.disabled}>\r\n                                Submit Questionnaire\r\n                            </button> }\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div className = 'questionnaire-main'>\r\n\r\n                <div className = 'progressBar'>\r\n                    <ProgressBar bgcolor=\"red\" progress = {`${currentIndex * 5}`}  height = {20}/>\r\n                </div>\r\n                 \r\n                <div className = 'questionCount'> \r\n                    <span> {`Question ${currentIndex + 1} of ${QuestionData.length}`} </span>\r\n                </div>\r\n\r\n                <div className = 'questionSection'>\r\n                    <div className = 'statement'>\r\n                        <h1> {question} </h1>\r\n                    </div>\r\n\r\n                    <div class = 'question-indy'>\r\n                        {\r\n                        answerChoices.map(option => (                  \r\n                            <p key = {answerChoices.id} className = {`choices ${userAnswer === option ? \"selected\" : null}`}\r\n                            onClick= {() => this.checkAnswer(option)}>\r\n                                {option}                                \r\n                            </p>\r\n                            )    \r\n                        )}\r\n                    </div>    \r\n                </div>\r\n                \r\n                <div className = 'next'>\r\n                    {currentIndex < QuestionData.length - 1 && \r\n                    <button className = 'button-next' disabled = {this.state.disabled} onClick = {this.nextQuestionHandler} onClick = { () => storeUserAnswerLocal('userCache',\r\n                    'https://localhost:300', {userAnswer})} >\r\n                        Next Question\r\n                    </button> }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}